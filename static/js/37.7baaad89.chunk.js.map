{"version":3,"file":"static/js/37.7baaad89.chunk.js","mappings":"iPACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0B,UCAzG,EAAiE,+B,SCOpDA,EAAkCC,EAAAA,MAAW,YAAiB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAEtDC,EAAc,CAChBC,MAAO,OACPC,WAAY,OACZC,eAAgB,QAEdC,EAAe,CACjBH,MAAO,QACPE,eAAgB,QAGpB,OACI,4BACI,iBAAME,UAAWC,EAAjB,UACA,gBAAKC,I,yiLAAkBC,IAAI,mBAE3B,SAAC,KAAD,CAASC,GAAE,mBAAcX,GAChBY,MAAO,qBAAEC,SAAyBX,EAAcI,GADzD,SAGKL,UC3BjB,EAAqE,iCCMxDa,EAAmCf,EAAAA,MAAW,YAAmB,EAAjBC,GAAkB,IAAde,EAAa,EAAbA,QAE7D,OACI,0BACQ,kBAAMR,UAAWC,EAAjB,UACKO,GACD,gBACIN,I,6qNACAC,IAAK,yBCFhBM,EAAoB,WAE7B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,WAAnDA,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,SACVC,GAAQJ,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMI,IAAID,SAE1CE,EAASJ,EAAQK,KAAI,SAAAC,GACvB,OAAO,SAAC7B,EAAD,CAAuBE,GAAI2B,EAAE3B,GAAIC,KAAM0B,EAAE1B,MAAxB0B,EAAE3B,OAExBe,EAAUO,EAASI,KAAI,SAAAE,GACzB,OAAO,SAACd,EAAD,CAAwBd,GAAI4B,EAAE5B,GAAIe,QAASa,EAAEb,SAA3Ba,EAAE5B,OAMzB6B,EAAmB,CACrBC,cAAeC,EAAAA,KACVC,IAAI,GADM,wBACe,GADf,cAInB,OACI,+BACI,iBAAKzB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKiB,KAEL,iBAAKlB,UAAWC,EAAhB,UACKO,GACD,SAAC,KAAD,CACIkB,cAAe,CAACH,cAAe,IAC/BD,iBAAkBE,EAAAA,GAAWF,GAC7BK,SApBK,SAACnB,EAAuBoB,GAC7ClB,GAASmB,EAAAA,EAAAA,IAAY,CAACC,YAAatB,EAAQe,cAAcQ,cACzDH,EAAOI,UAAU,CAACC,OAAQ,CAACV,cAAe,OAe9B,SAKK,SAAAW,GAAM,OACH,UAAC,KAAD,YACI,SAACC,EAAA,EAAD,CAAazC,KAAM,gBACN0C,KAAM,OACNC,aAAa,EACbC,aAAa,EACbtB,MAAOA,KAEpB,mBAAQuB,WAAYL,EAAOM,OAAOjB,cAAea,KAAK,SAAtD","sources":["webpack://social-network-ts/./src/ui/Dialogs/dialogs.module.css?1282","webpack://social-network-ts/./src/ui/Dialogs/DialogItem/dialogItem.module.css?f2e0","ui/Dialogs/DialogItem/DialogItem.tsx","webpack://social-network-ts/./src/ui/Dialogs/MessageItem/messageItem.module.css?9635","ui/Dialogs/MessageItem/MessageItem.tsx","ui/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__r1EyT\",\"dialogsItem\":\"dialogs_dialogsItem__A4URc\",\"messages\":\"dialogs_messages__KOD-B\",\"message\":\"dialogs_message__8FmJ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialogItem_dialog__7cl-F\",\"dialogItem\":\"dialogItem_dialogItem__pUFpr\"};","import {NavLink} from 'react-router-dom';\r\nimport React from 'react';\r\n\r\nimport styles from './dialogItem.module.css';\r\nimport dialogPhoto from './../../../assets/img/dialogPhoto1.png';\r\n\r\ntype PropsType = { id: number, name: string }\r\n\r\nexport const DialogItem: React.FC<PropsType> = React.memo(({id, name}) => {\r\n\r\n    const activeStyle = {\r\n        color: 'gold',\r\n        fontWeight: 'bold',\r\n        textDecoration: 'none',\r\n    };\r\n    const defaultStyle = {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <span className={styles.dialogItem}>\r\n            <img src={dialogPhoto} alt=\"dialogPhoto\"/>\r\n                </span>\r\n            <NavLink to={`/dialogs/${id}`}\r\n                     style={({isActive}) => isActive ? activeStyle : defaultStyle}\r\n            >\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"messageItem_message__S1eKo\",\"messageItem\":\"messageItem_messageItem__BTGrQ\"};","import React from 'react';\r\n\r\nimport styles from './messageItem.module.css';\r\nimport messagePhoto from './../../../assets/img/messagePhoto.png';\r\n\r\ntype PropsType = { id: number, message: string }\r\n\r\nexport const MessageItem: React.FC<PropsType> = React.memo(({id, message}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span className={styles.messageItem}>\r\n                    {message}\r\n                    <img\r\n                        src={messagePhoto}\r\n                        alt={'messagePhoto'}/>\r\n            </span>\r\n        </div>\r\n    );\r\n})\r\n\r\n","import React from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport {Form, Formik, FormikHelpers, FormikValues} from 'formik';\r\n\r\nimport {sendMessage} from '../../redux/reducers/dialogsReducer';\r\nimport {useAppSelector} from '../../redux/store';\r\nimport {FormikField} from '../../reusableComponent/FormikField';\r\n\r\nimport styles from './dialogs.module.css';\r\nimport {DialogItem} from './DialogItem/DialogItem';\r\nimport {MessageItem} from './MessageItem/MessageItem';\r\n\r\nexport const Dialogs: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {dialogs, messages} = useAppSelector(state => state.dialogs);\r\n    const error = useAppSelector(state => state.app.error)\r\n\r\n    const dialog = dialogs.map(d => {\r\n        return <DialogItem key={d.id} id={d.id} name={d.name}/>;\r\n    });\r\n    const message = messages.map(m => {\r\n        return <MessageItem key={m.id} id={m.id} message={m.message}/>;\r\n    });\r\n    const addDialogMessage = (message: FormikValues, action: FormikHelpers<{ dialogMessage: string }>) => {\r\n        dispatch(sendMessage({messageText: message.dialogMessage.toString()}))\r\n        action.resetForm({values: {dialogMessage: ''}})\r\n    }\r\n    const validationSchema = {\r\n        dialogMessage: Yup.string()\r\n            .max(30, `Max length is ${30} symbols`),\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.dialogs}>\r\n                <div className={styles.dialogsItem}>\r\n                    {dialog}\r\n                </div>\r\n                <div className={styles.messages}>\r\n                    {message}\r\n                    <Formik\r\n                        initialValues={{dialogMessage: ''}}\r\n                        validationSchema={Yup.object(validationSchema)}\r\n                        onSubmit={addDialogMessage}\r\n                    >\r\n                        {formik => (\r\n                            <Form>\r\n                                <FormikField name={'dialogMessage'}\r\n                                             type={'text'}\r\n                                             isShowError={true}\r\n                                             isShowLabel={false}\r\n                                             error={error}\r\n                                />\r\n                                <button disabled={!!formik.errors.dialogMessage} type=\"submit\">\r\n                                    add message\r\n                                </button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n"],"names":["DialogItem","React","id","name","activeStyle","color","fontWeight","textDecoration","defaultStyle","className","styles","src","alt","to","style","isActive","MessageItem","message","Dialogs","dispatch","useDispatch","useAppSelector","state","dialogs","messages","error","app","dialog","map","d","m","validationSchema","dialogMessage","Yup","max","initialValues","onSubmit","action","sendMessage","messageText","toString","resetForm","values","formik","FormikField","type","isShowError","isShowLabel","disabled","errors"],"sourceRoot":""}