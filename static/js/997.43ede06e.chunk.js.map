{"version":3,"file":"static/js/997.43ede06e.chunk.js","mappings":"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","sources":["ui/common/Paginator.tsx","webpack://social-network-ts/./src/ui/Users/User/user.module.css?553d","ui/Users/User/User.tsx","webpack://social-network-ts/./src/ui/Users/users.module.css?71f6","ui/Users/UsersSearchForm.tsx","ui/Users/Users.tsx"],"sourcesContent":["import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport {Pagination, PaginationProps} from 'antd'\r\n\r\nimport {changeCurrentPage, changePageSize} from '../../redux/reducers/usersReducer'\r\nimport {useAppSelector} from '../../redux/store'\r\nimport {UriParamsType} from '../../api/userAPI'\r\n\r\ntype PropsType = {\r\n    setSearchParams: (nextInit: UriParamsType) => void\r\n    uriParams: UriParamsType\r\n}\r\n\r\nexport const Paginator: React.FC<PropsType> = ({setSearchParams, uriParams}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {currentPage, totalCount, pageSize} = useAppSelector(state => state.users)\r\n    const {term, friend} = uriParams\r\n\r\n    const itemRender: PaginationProps['itemRender'] = (_, type, originalElement) => {\r\n        if (type === 'prev') {\r\n            return <a>Previous</a>\r\n        }\r\n        if (type === 'next') {\r\n            return <a>Next</a>\r\n        }\r\n        return originalElement\r\n    }\r\n\r\n    const changePageAndPageSizeHandle = (page: number, pageSize: number) => {\r\n        dispatch(changeCurrentPage({currentPage: page}))\r\n        dispatch(changePageSize({pageSize}))\r\n        setSearchParams({page: String(page), term, friend, count: String(pageSize)})\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Pagination total={totalCount}\r\n                    itemRender={itemRender}\r\n                    onChange={changePageAndPageSizeHandle}\r\n                    current={currentPage}\r\n                    showQuickJumper\r\n                    pageSize={pageSize}\r\n        />\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"ava\":\"user_ava__-Gwz1\",\"item\":\"user_item__plEqK\"};","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport {UserAddOutlined, UserDeleteOutlined} from '@ant-design/icons'\r\n\r\nimport {followUnfollow} from '../../../redux/reducers/usersReducer'\r\nimport {useAppSelector} from '../../../redux/store'\r\nimport {UserType} from '../../../api/userAPI'\r\n\r\nimport styles from './user.module.css'\r\nimport avaImg from './../../../assets/img/client-2-512.webp'\r\n\r\n\r\ntype PropsType = { user: UserType }\r\n\r\nexport const User: React.FC<PropsType> = ({user}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const followingInProgress = useAppSelector(state => state.users.followingInProgress)\r\n\r\n    const {id, name, photos, followed, status} = user\r\n\r\n    const followUserHandle = () => dispatch(followUnfollow({userId: id, isFollow: true}))\r\n    const unFollowUserHandle = () => dispatch(followUnfollow({userId: id, isFollow: false}))\r\n\r\n\r\n    return (\r\n        <div className={styles.item}>\r\n            <div>\r\n                <div>{name}</div>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <NavLink to={'/profile/' + id}>\r\n                        <img\r\n                            src={photos.small ? photos.small : avaImg}\r\n                            alt=\"ava\"\r\n                            className={styles.ava}\r\n                        />\r\n                    </NavLink>\r\n\r\n                </div>\r\n                <div>{status}</div>\r\n\r\n                <div>\r\n                    {followed\r\n                        ? <Button disabled={followingInProgress.some(userId => userId === id)}\r\n                                  htmlType={'submit'}\r\n                                  icon={<UserDeleteOutlined/>}\r\n                                  onClick={unFollowUserHandle}\r\n                                  size={'small'}>\r\n                            Unfollow\r\n                        </Button>\r\n                        : <Button disabled={followingInProgress.some(userId => userId === id)}\r\n                                  htmlType={'submit'}\r\n                                  icon={<UserAddOutlined/>}\r\n                                  onClick={followUserHandle}\r\n                                  size={'small'}>\r\n                            Follow\r\n                        </Button>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"userItems\":\"users_userItems__BllGZ\"};","import React from 'react'\r\nimport {Field, Form, Formik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport {useDispatch} from 'react-redux'\r\nimport {URLSearchParamsInit} from 'react-router-dom'\r\n\r\nimport {SearchOutlined} from '@ant-design/icons'\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport {FormikField} from '../../reusableComponent/FormikField'\r\nimport {useAppSelector} from '../../redux/store'\r\nimport {setUsers} from '../../redux/reducers/usersReducer'\r\nimport {ParamsUserPageType} from '../../api/userAPI'\r\n\r\ntype PropsType = {\r\n    setSearchParams: (nextInit: URLSearchParamsInit) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = ({setSearchParams}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {currentPage, pageSize} = useAppSelector(state => state.users)\r\n    const {term, friend} = useAppSelector(state => state.users.filter)\r\n    const {error} = useAppSelector(state => state.app)\r\n\r\n\r\n    const initialValues = {term, currentPage, pageSize, friend}\r\n    const validationSchema = {}\r\n    const onSubmitLoginUser = (values: ParamsUserPageType) => {\r\n        dispatch(setUsers({pageSize, currentPage, term: values.term, friend: values.friend}))\r\n        setSearchParams({page: '1', term: values.term, friend: values.friend as string})\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={Yup.object(validationSchema)}\r\n            onSubmit={onSubmitLoginUser}\r\n        >\r\n            {formik => (\r\n                <Form>\r\n                    <FormikField type={'text'}\r\n                                 name={'term'}\r\n                                 isShowError={false}\r\n                                 isShowLabel={false}\r\n                                 error={error}\r\n                                 placeholder={'find users'}\r\n                    />\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value={'null'}>All</option>\r\n                        <option value={'true'}>Only followed</option>\r\n                        <option value={'false'}>Only unfollowed</option>\r\n                    </Field>\r\n                    <Button htmlType={'submit'} size={'small'} icon={<SearchOutlined/>}>Search</Button>\r\n                    <div>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {useNavigate, useSearchParams} from 'react-router-dom'\r\n\r\nimport {useAppSelector} from '../../redux/store'\r\nimport {Preloader} from '../Preloader/Preloader'\r\nimport {PATH} from '../Routing/Routing'\r\nimport {Paginator} from '../common/Paginator'\r\nimport {changeCurrentPage, changePageSize, setUsers} from '../../redux/reducers/usersReducer'\r\nimport {UriParamsType} from '../../api/userAPI'\r\n\r\nimport {User} from './User/User'\r\nimport styles from './users.module.css'\r\nimport {UsersSearchForm} from './UsersSearchForm'\r\n\r\n\r\nexport const Users: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const {users, pageSize} = useAppSelector(state => state.users)\r\n    const {status} = useAppSelector(state => state.app)\r\n    const isAuth = useAppSelector(state => state.auth.isAuth)\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams()\r\n\r\n    const user = users.map(u => {\r\n        return <User key={u.id} user={u}/>\r\n    })\r\n\r\n    const actualPage = searchParams.get('page') || '1'\r\n    const actualCount = searchParams.get('count') || String(pageSize)\r\n    const actualTerm = searchParams.get('term') || ''\r\n    const actualFriend = searchParams.get('friend') || 'null'\r\n\r\n    const uriParams: UriParamsType = {\r\n        page: actualPage,\r\n        count: actualCount,\r\n        term: actualTerm,\r\n        friend: actualFriend,\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSearchParams(uriParams)\r\n        dispatch(setUsers({\r\n            pageSize: Number(uriParams.count),\r\n            currentPage: Number(uriParams.page),\r\n            term: uriParams.term,\r\n            friend: uriParams.friend === 'null' ? 'null' : uriParams.friend === 'true',\r\n        }))\r\n        dispatch(changeCurrentPage({currentPage: Number(uriParams.page)}))\r\n        dispatch(changePageSize({pageSize: Number(uriParams.count)}))\r\n\r\n    }, [dispatch, actualPage, uriParams.page, uriParams.count])\r\n\r\n    if (!isAuth) {\r\n        navigate(PATH.LOGIN_PAGE)\r\n    }\r\n\r\n    return (\r\n        <div className={styles.userItems}>\r\n            {status === 'loading' ? <Preloader/>\r\n                : <div>\r\n                    <Paginator setSearchParams={setSearchParams} uriParams={uriParams}/>\r\n                    <UsersSearchForm setSearchParams={setSearchParams}/>\r\n                    {user}\r\n                </div>}\r\n        </div>\r\n    )\r\n}"],"names":["Paginator","setSearchParams","uriParams","dispatch","useDispatch","useAppSelector","state","users","currentPage","totalCount","pageSize","term","friend","total","itemRender","_","type","originalElement","onChange","page","changeCurrentPage","changePageSize","String","count","current","showQuickJumper","User","user","followingInProgress","id","name","photos","followed","status","className","styles","to","src","small","avaImg","alt","disabled","some","userId","htmlType","icon","UserDeleteOutlined","onClick","followUnfollow","isFollow","size","UserAddOutlined","UsersSearchForm","filter","error","app","initialValues","validationSchema","Yup","onSubmit","values","setUsers","formik","FormikField","isShowError","isShowLabel","placeholder","as","value","SearchOutlined","Users","navigate","useNavigate","isAuth","auth","useSearchParams","searchParams","map","u","actualPage","get","useEffect","Number","PATH","Preloader"],"sourceRoot":""}