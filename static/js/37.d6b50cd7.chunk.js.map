{"version":3,"file":"static/js/37.d6b50cd7.chunk.js","mappings":"oQACA,EAA0B,yBAA1B,EAAiE,6BAAjE,EAAyG,0B,UCAzG,EAAiE,+B,SCOpDA,EAAkCC,EAAAA,MAAW,YAAiB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KAEtDC,EAAc,CAChBC,MAAO,OACPC,WAAY,OACZC,eAAgB,QAEdC,EAAe,CACjBH,MAAO,QACPE,eAAgB,QAGpB,OACI,4BACI,iBAAME,UAAWC,EAAjB,UACA,gBAAKC,I,yiLAAkBC,IAAI,mBAE3B,SAAC,KAAD,CAASC,GAAE,mBAAcX,GAChBY,MAAO,qBAAEC,SAAyBX,EAAcI,GADzD,SAGKL,UC3BjB,EAAqE,iCCMxDa,EAAmCf,EAAAA,MAAW,YAAmB,EAAjBC,GAAkB,IAAde,EAAa,EAAbA,QAE7D,OACI,0BACQ,kBAAMR,UAAWC,EAAjB,UACKO,GACD,gBACIN,I,6qNACAC,IAAK,yBCEhBM,EAAoB,WAE7B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,GAA4BC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMC,WAAnDA,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,SACVC,GAAQJ,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMI,IAAID,SAE1CE,EAASJ,EAAQK,KAAI,SAAAC,GACvB,OAAO,SAAC7B,EAAD,CAAuBE,GAAI2B,EAAE3B,GAAIC,KAAM0B,EAAE1B,MAAxB0B,EAAE3B,OAExBe,EAAUO,EAASI,KAAI,SAAAE,GACzB,OAAO,SAACd,EAAD,CAAwBd,GAAI4B,EAAE5B,GAAIe,QAASa,EAAEb,SAA3Ba,EAAE5B,OAMzB6B,EAAmB,CACrBC,cAAeC,EAAAA,KACVC,IAAI,GADM,wBACe,GADf,cAInB,OACI,+BACI,iBAAKzB,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKiB,KAEL,iBAAKlB,UAAWC,EAAhB,UACKO,GACD,SAAC,KAAD,CACIkB,cAAe,CAACH,cAAe,IAC/BD,iBAAkBE,EAAAA,GAAWF,GAC7BK,SApBK,SAACnB,EAAuBoB,GAC7ClB,GAASmB,EAAAA,EAAAA,IAAY,CAACC,YAAaC,OAAOvB,EAAQe,kBAClDK,EAAOI,UAAU,CAACC,OAAQ,CAACV,cAAe,OAe9B,SAKK,SAAAW,GAAM,OACH,UAAC,KAAD,YACI,SAACC,EAAA,EAAD,CAAazC,KAAM,gBACN0C,KAAM,OACNC,aAAa,EACbC,aAAa,EACbtB,MAAOA,KAEpB,SAAC,IAAD,CAAQuB,WAAYL,EAAOM,OAAOjB,cAC1BkB,SAAU,SACVC,MAAM,SAACC,EAAA,EAAD,IACNC,KAAM,QAHd,0C,6EC1DhC,EADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,GAAI,SAAY,CAAC,CAAE,IAAO,QAAS,MAAS,MAAS,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,mZAAuZ,KAAQ,OAAQ,MAAS,Y,UCMrpBD,EAAe,SAAsBE,EAAOC,GAC9C,OAAoBtD,EAAAA,cAAoBuD,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIH,GAAQ,GAAI,CAC5FC,IAAKA,EACLJ,KAAMO,MAIVN,EAAaO,YAAc,eAC3B,MAA4B1D,EAAAA,WAAiBmD","sources":["webpack://social-network-ts/./src/ui/Dialogs/dialogs.module.css?1282","webpack://social-network-ts/./src/ui/Dialogs/DialogItem/dialogItem.module.css?f2e0","ui/Dialogs/DialogItem/DialogItem.tsx","webpack://social-network-ts/./src/ui/Dialogs/MessageItem/messageItem.module.css?9635","ui/Dialogs/MessageItem/MessageItem.tsx","ui/Dialogs/Dialogs.tsx","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"dialogs_dialogs__r1EyT\",\"dialogsItem\":\"dialogs_dialogsItem__A4URc\",\"messages\":\"dialogs_messages__KOD-B\",\"message\":\"dialogs_message__8FmJ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"dialogItem_dialog__7cl-F\",\"dialogItem\":\"dialogItem_dialogItem__pUFpr\"};","import {NavLink} from 'react-router-dom'\r\nimport React from 'react'\r\n\r\nimport styles from './dialogItem.module.css'\r\nimport dialogPhoto from './../../../assets/img/dialogPhoto1.png'\r\n\r\ntype PropsType = { id: number, name: string }\r\n\r\nexport const DialogItem: React.FC<PropsType> = React.memo(({id, name}) => {\r\n\r\n    const activeStyle = {\r\n        color: 'gold',\r\n        fontWeight: 'bold',\r\n        textDecoration: 'none',\r\n    }\r\n    const defaultStyle = {\r\n        color: 'white',\r\n        textDecoration: 'none',\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span className={styles.dialogItem}>\r\n            <img src={dialogPhoto} alt=\"dialogPhoto\"/>\r\n                </span>\r\n            <NavLink to={`/dialogs/${id}`}\r\n                     style={({isActive}) => isActive ? activeStyle : defaultStyle}\r\n            >\r\n                {name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n})","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"messageItem_message__S1eKo\",\"messageItem\":\"messageItem_messageItem__BTGrQ\"};","import React from 'react'\r\n\r\nimport styles from './messageItem.module.css'\r\nimport messagePhoto from './../../../assets/img/messagePhoto.png'\r\n\r\ntype PropsType = { id: number, message: string }\r\n\r\nexport const MessageItem: React.FC<PropsType> = React.memo(({id, message}) => {\r\n\r\n    return (\r\n        <div>\r\n                <span className={styles.messageItem}>\r\n                    {message}\r\n                    <img\r\n                        src={messagePhoto}\r\n                        alt={'messagePhoto'}/>\r\n            </span>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport {Form, Formik, FormikHelpers, FormikValues} from 'formik'\r\n\r\nimport {SendOutlined} from '@ant-design/icons'\r\n\r\nimport {Button} from 'antd'\r\n\r\nimport {sendMessage} from '../../redux/reducers/dialogsReducer'\r\nimport {useAppSelector} from '../../redux/store'\r\nimport {FormikField} from '../../reusableComponent/FormikField'\r\n\r\nimport styles from './dialogs.module.css'\r\nimport {DialogItem} from './DialogItem/DialogItem'\r\nimport {MessageItem} from './MessageItem/MessageItem'\r\n\r\nexport const Dialogs: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {dialogs, messages} = useAppSelector(state => state.dialogs)\r\n    const error = useAppSelector(state => state.app.error)\r\n\r\n    const dialog = dialogs.map(d => {\r\n        return <DialogItem key={d.id} id={d.id} name={d.name}/>\r\n    })\r\n    const message = messages.map(m => {\r\n        return <MessageItem key={m.id} id={m.id} message={m.message}/>\r\n    })\r\n    const addDialogMessage = (message: FormikValues, action: FormikHelpers<{ dialogMessage: string }>) => {\r\n        dispatch(sendMessage({messageText: String(message.dialogMessage)}))\r\n        action.resetForm({values: {dialogMessage: ''}})\r\n    }\r\n    const validationSchema = {\r\n        dialogMessage: Yup.string()\r\n            .max(30, `Max length is ${30} symbols`),\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.dialogs}>\r\n                <div className={styles.dialogsItem}>\r\n                    {dialog}\r\n                </div>\r\n                <div className={styles.messages}>\r\n                    {message}\r\n                    <Formik\r\n                        initialValues={{dialogMessage: ''}}\r\n                        validationSchema={Yup.object(validationSchema)}\r\n                        onSubmit={addDialogMessage}\r\n                    >\r\n                        {formik => (\r\n                            <Form>\r\n                                <FormikField name={'dialogMessage'}\r\n                                             type={'text'}\r\n                                             isShowError={true}\r\n                                             isShowLabel={false}\r\n                                             error={error}\r\n                                />\r\n                                <Button disabled={!!formik.errors.dialogMessage}\r\n                                        htmlType={'submit'}\r\n                                        icon={<SendOutlined/>}\r\n                                        size={'small'}>\r\n                                    Send message\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\n\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);"],"names":["DialogItem","React","id","name","activeStyle","color","fontWeight","textDecoration","defaultStyle","className","styles","src","alt","to","style","isActive","MessageItem","message","Dialogs","dispatch","useDispatch","useAppSelector","state","dialogs","messages","error","app","dialog","map","d","m","validationSchema","dialogMessage","Yup","max","initialValues","onSubmit","action","sendMessage","messageText","String","resetForm","values","formik","FormikField","type","isShowError","isShowLabel","disabled","errors","htmlType","icon","SendOutlined","size","props","ref","AntdIcon","_objectSpread","SendOutlinedSvg","displayName"],"sourceRoot":""}