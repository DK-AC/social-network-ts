{"version":3,"file":"static/js/499.9693f1b4.chunk.js","mappings":"iPAWaA,EAAyB,WAElC,IAAMC,EACG,qCADHA,EAEI,OAFJA,EAGM,KAGZ,OACI,SAAC,IAAD,CACIC,QAAQ,uBAAID,IACZE,QAAQ,SAAC,IAAD,CAAQC,IAAKH,EAAaI,IAAI,aACtCC,SACI,uBACKL,IAGTM,UACI,SAAC,IAAD,CAASC,MAAOC,GAAAA,GAASC,OAAO,uBAAhC,UACI,0BAAOD,GAAAA,GAASE,iBCpBvBC,EAAe,WAExB,IAEMX,EAFW,CAAC,EAAG,EAAG,EAAG,GAEFY,KAAI,SAACZ,GAC1B,OAAO,SAACD,EAAD,GAAcC,MAGzB,OACI,yBACKA,K,iDChBNa,EAAYC,EAAAA,EAAAA,SAkBbC,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,WAAYC,EAAlC,EAAkCA,MAAlC,OACX,iCACI,SAAC,SAAD,WACI,SAACN,EAAD,CAAUO,KAAM,EAAGJ,SAAUA,EAAUG,MAAOA,OAElD,SAAC,SAAD,WACI,SAAC,IAAD,CAAQE,SAAS,SAASC,QAASJ,EAAYK,QAASN,EAAUO,KAAK,UAAvE,+BAOCC,EAAiB,WAE1B,OAAgCC,EAAAA,EAAAA,UAAwB,IAAxD,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,WAAS,GAA7C,eAAOR,EAAP,KAAmBW,EAAnB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcW,EAAd,KA0BA,OACI,+BACI,SAAC,IAAD,CACI5B,QAAQ,SAAC,IAAD,CAAQC,IAAI,qCAAqCC,IAAI,aAC7DC,SACI,SAACU,EAAD,CACIC,SAVC,SAACe,GAClBD,EAASC,EAAEC,OAAOb,QAUFF,SA/BC,WACZE,IAELU,GAAc,GAEdI,YAAW,WACPJ,GAAc,GACdC,EAAS,IACTF,EAAY,GAAD,eACJD,GADI,CAEP,CACI1B,OAAQ,WACRC,OAAQ,qCACRG,SAAS,uBAAIc,IACbb,SAAUE,GAAAA,GAASE,gBAG5B,OAeaQ,WAAYA,EACZC,MAAOA,SCzE/B,EAA4B,4BCKfe,EAAW,WACpB,OACI,iCACI,gBAAKC,UAAWC,EAAhB,UACI,SAACzB,EAAD,OAEJ,SAACc,EAAD","sources":["components/Chat/Messages/Message/Message.tsx","components/Chat/Messages/Messages.tsx","components/Chat/AddMessageForm.tsx","webpack://social-network-ts/./src/components/Chat/chatPage.module.css?406a","components/Chat/ChatPage.tsx"],"sourcesContent":["import React, {FC} from 'react'\r\nimport {Avatar, Comment, Tooltip} from 'antd'\r\nimport moment from 'moment'\r\n\r\n\r\ntype PropsType = {\r\n    // url: string\r\n    // text: string\r\n    // author: string\r\n}\r\n\r\nexport const Message: FC<PropsType> = () => {\r\n\r\n    const message = {\r\n        url: 'https://joeschmoe.io/api/v1/random',\r\n        text: 'Test',\r\n        author: 'DK',\r\n    }\r\n\r\n    return (\r\n        <Comment\r\n            author={<a>{message.author}</a>}\r\n            avatar={<Avatar src={message.url} alt=\"Han Solo\"/>}\r\n            content={\r\n                <p>\r\n                    {message.text}\r\n                </p>\r\n            }\r\n            datetime={\r\n                <Tooltip title={moment().format('YYYY-MM-DD HH:mm:ss')}>\r\n                    <span>{moment().fromNow()}</span>\r\n                </Tooltip>\r\n            }\r\n        />\r\n    )\r\n}","import React, {FC} from 'react'\r\n\r\nimport {Message} from './Message'\r\n\r\ntype MessageType = {\r\n    url: string\r\n    text: string\r\n    author: string\r\n}\r\n\r\nexport const Messages: FC = () => {\r\n\r\n    const messages = [1, 2, 3, 4]\r\n\r\n    const message = messages.map((message: any) => {\r\n        return <Message key={message}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport {Avatar, Button, Comment, Form, Input, List} from 'antd'\r\nimport moment from 'moment'\r\n\r\nconst {TextArea} = Input\r\n\r\ntype CommentItem = {\r\n    author: string;\r\n    avatar: string;\r\n    content: React.ReactNode;\r\n    datetime: string;\r\n}\r\n\r\ntype EditorProps = {\r\n    onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n    onSubmit: () => void;\r\n    submitting: boolean;\r\n    value: string;\r\n}\r\n\r\n\r\n\r\nconst Editor = ({onChange, onSubmit, submitting, value}: EditorProps) => (\r\n    <>\r\n        <Form.Item>\r\n            <TextArea rows={4} onChange={onChange} value={value}/>\r\n        </Form.Item>\r\n        <Form.Item>\r\n            <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"default\">\r\n                Add Comment\r\n            </Button>\r\n        </Form.Item>\r\n    </>\r\n)\r\n\r\nexport const AddMessageForm = () => {\r\n\r\n    const [comments, setComments] = useState<CommentItem[]>([])\r\n    const [submitting, setSubmitting] = useState(false)\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleSubmit = () => {\r\n        if (!value) return\r\n\r\n        setSubmitting(true)\r\n\r\n        setTimeout(() => {\r\n            setSubmitting(false)\r\n            setValue('')\r\n            setComments([\r\n                ...comments,\r\n                {\r\n                    author: 'Han Solo',\r\n                    avatar: 'https://joeschmoe.io/api/v1/random',\r\n                    content: <p>{value}</p>,\r\n                    datetime: moment().fromNow(),\r\n                },\r\n            ])\r\n        }, 1000)\r\n    }\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        setValue(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Comment\r\n                avatar={<Avatar src=\"https://joeschmoe.io/api/v1/random\" alt=\"Han Solo\"/>}\r\n                content={\r\n                    <Editor\r\n                        onChange={handleChange}\r\n                        onSubmit={handleSubmit}\r\n                        submitting={submitting}\r\n                        value={value}\r\n                    />\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"chatPage_container__S4TOn\"};","import React from 'react'\r\n\r\nimport {Messages} from './Messages'\r\nimport {AddMessageForm} from './AddMessageForm'\r\nimport styles from './chatPage.module.css'\r\n\r\nexport const ChatPage = () => {\r\n    return (\r\n        <>\r\n            <div className={styles.container}>\r\n                <Messages/>\r\n            </div>\r\n            <AddMessageForm/>\r\n        </>\r\n    )\r\n}\r\n\r\n"],"names":["Message","message","author","avatar","src","alt","content","datetime","title","moment","format","fromNow","Messages","map","TextArea","Input","Editor","onChange","onSubmit","submitting","value","rows","htmlType","loading","onClick","type","AddMessageForm","useState","comments","setComments","setSubmitting","setValue","e","target","setTimeout","ChatPage","className","styles"],"sourceRoot":""}